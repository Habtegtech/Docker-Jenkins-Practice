pipeline {
    agent any

    environment {
        FLASK_ENV = 'development' // or 'production'
    }

    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Setting up the virtual environment...'
                    // Create a virtual environment
                    sh 'python3 -m venv venv'
                    
                    // Install dependencies
                    echo 'Installing dependencies...'
                    sh '''
                        source venv/bin/activate
                        pip install --upgrade pip  // Upgrade pip to avoid potential version issues
                        pip install -r requirements.txt  // Install dependencies from requirements.txt
                    '''
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                    // Activate the virtual environment and run tests
                    sh '''
                        source venv/bin/activate
                        pytest test_app.py
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying the application...'
                    // Ensure gunicorn is installed and start the application with Gunicorn
                    sh '''
                        source venv/bin/activate
                        pip install gunicorn  // Install Gunicorn explicitly in case it's missing
                        gunicorn -w 4 -b 0.0.0.0:5000 app:app &
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }

        success {
            echo 'The build was successful!'
        }

        failure {
            echo 'The build failed.'
        }
    }
}
